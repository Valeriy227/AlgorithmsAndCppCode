#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <cmath>
#include <iomanip>
#include <set>

#define endl "\n"

using namespace std;

typedef long long ll;
typedef long double ld;

int main() {
    int t;
    while (t) {
        t--;
        string s;
        cin >> s;
        int n = s.length();
        vector<vector<pair<int, int>>> dp(n, vector<pair<int, int>>(4, {-2 * n, 2 * n}));
        vector<vector<int>> anc(n, vector<int>(4, -1));

        if (s[0] == '.') {
            dp[0][0].first = dp[0][0].second = -1;
            dp[0][2].first = dp[0][2].first = 1;
        }
        else if (s[0] == '0') {
            dp[0][0].first = dp[0][0].second = -1;
        }
        else {
            dp[0][2].first = dp[0][2].first = 1;
        }

        for (int i = 1; i < n; ++i) {
            if (s[i] == '.') {
                if (dp[i - 1][0]) {
                    dp[i][1] = true;
                    anc[i][1] = 0;

                    dp[i][2] = true;
                    anc[i][2] = 0;
                }
                if (dp[i - 1][1]) {
                    dp[i][2] = true;
                    anc[i][2] = 1;
                }
                if (dp[i - 1][2]) {
                    dp[i][0] = true;
                    anc[i][0] = 2;

                    dp[i][3] = true;
                    anc[i][3] = 2;
                }
                if (dp[i - 1][3]) {
                    dp[i][0] = true;
                    anc[i][0] = 3;
                }
            }
            else if (s[i] == '0') {
                if (dp[i - 1][0]) {
                    dp[i][1] = true;
                    anc[i][1] = 0;

                    dp[i][2] = true;
                    anc[i][2] = 0;
                }
                if (dp[i - 1][1]) {
                    dp[i][2] = true;
                    anc[i][2] = 1;
                }
            }
            else if (s[i] == '1') {
                if (dp[i - 1][2]) {
                    dp[i][0] = true;
                    anc[i][0] = 2;

                    dp[i][3] = true;
                    anc[i][3] = 2;
                }
                if (dp[i - 1][3]) {
                    dp[i][0] = true;
                    anc[i][0] = 3;
                }
            }
        }

        int j = -1;
        int i = n - 1;
        if (dp[i][0]) {
            j = 0;
        }
        if (dp[i][1]) {
            j = 1;
        }
        if (dp[i][2]) {
            j = 2;
        }
        if (dp[i][3]) {
            j = 3;
        }
        while ()
    }
}